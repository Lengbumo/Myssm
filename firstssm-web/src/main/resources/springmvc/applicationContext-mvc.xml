<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:mvc="http://www.springframework.org/schema/mvc"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd    
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">  
                        
    <!-- 静态资源处理  css js imgs -->
    <mvc:resources mapping="/assets/**" location="/assets/" />
	<mvc:resources mapping="/static/**" location="/static/"/>
	
	<!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->  
    <context:component-scan base-package="com.my.ssm.ctl.*" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
    
    <!-- 扩充了注解驱动，可以将请求参数绑定到控制器参数 -->
    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
            	<property name="objectMapper" ref="customObjectMapper" />
		        <property name="supportedMediaTypes">
		            <list>
		                <value>text/html;charset=UTF-8</value>
		                <value>application/json;charset=UTF-8</value>
		            </list>
		        </property>
		    </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
    <bean id="customObjectMapper" class="com.my.ssm.core.mapper.CustomDateMapper" />
    
    <!--避免IE执行AJAX时，返回JSON出现下载文件 -->  
    <bean id="mappingJacksonHttpMessageConverter"  
        class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">  
        <property name="supportedMediaTypes">  
            <list>  
                <value>text/html;charset=UTF-8</value>  
            </list>  
        </property>  
    </bean>  
    <!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->  
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">  
        <property name="messageConverters">  
            <list>  
                <ref bean="mappingJacksonHttpMessageConverter" /> <!-- JSON转换器 -->  
            </list>  
        </property>  
    </bean> 
    
    <!-- 配置文件上传 -->       
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">    
        <!-- 注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->
        <!-- 默认编码 -->  
        <property name="defaultEncoding" value="utf-8" />    
        <!-- 文件大小最大值 -->  
        <property name="maxUploadSize" value="10485760000" />    
        <!-- 内存中的最大值 -->  
        <property name="maxInMemorySize" value="40960" />   
        <!-- 启用是为了推迟文件解析，以便捕获文件大小异常 -->
        <property name="resolveLazily" value="true"/>
    </bean> 
    
    <!-- 配置ViewResolver 。可用多个ViewResolver 。使用order属性排序。   InternalResourceViewResolver 放在最后-->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
    	<property name="order" value="1"></property>
        <property name="mediaTypes">
            <map>
                <!-- 告诉视图解析器，返回的类型为json格式 -->
                <entry key="atom" value="application/atom+xml" />
                <entry key="json" value="application/json" />
                <entry key="xml" value="application/xml" />
                <entry key="html" value="text/html" />
            </map>
        </property>
        <property name="viewResolvers">
			<list>
				<!-- 定义跳转的文件的前后缀 ，视图模式配置-->  
				<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
					<property name="prefix" value="/WEB-INF/views/" />
					<property name="suffix" value=".jsp" />
				</bean>
			</list>
		</property>
    </bean>
    
    <!-- exception -->
	<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="defaultErrorView" value="/errors/error"></property>
		<property name="defaultStatusCode" value="500" />
		<property name="exceptionAttribute" value="exception"></property>
		<property name="exceptionMappings">
			<props>
				<prop key="java.lang.Exception">/errors/error</prop>
				<prop key="java.lang.Throwable">/errors/error</prop>
				<prop key="com.my.ssm.core.exception.BizException">errors/error</prop>
			</props>
		</property>
		<property name="statusCodes">
			<props>
				<prop key="/errors/401">401</prop>
				<prop key="/errors/404">404</prop>
                <prop key="/errors/405">405</prop>
				<prop key="/errors/500">500</prop>
			</props>
		</property>
	</bean>
	
	<!-- Interceptor拦截器 -->
	<mvc:interceptors>
		<bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
            <property name="paramName" value="request_locale" />
        </bean>
        <!-- 自定义拦截器加入到springmvc中 -->
		<bean id="threadLocalInterceptor" class="com.my.ssm.core.interceptor.ThreadLocalInterceptor" />
	</mvc:interceptors>

    <!-- 注入swagger配置 -->
    <bean class="com.my.ssm.core.swagger.SwaggerConfig"/>
</beans>