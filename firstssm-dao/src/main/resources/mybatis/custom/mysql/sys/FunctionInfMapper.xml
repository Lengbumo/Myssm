<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.my.ssm.sys.dao.FunctionInfMapper">

	<!-- ExtBaseResultMap -->
	<resultMap id="ExtBaseResultMap" type="com.my.ssm.sys.pojo.FunctionInfPojo" extends="BaseResultMap">
	    
	</resultMap>

	<!-- page -->
	<select id="page" resultMap="BaseResultMap" parameterType="com.my.ssm.sys.search.FunctionInfSearch">
        <![CDATA[${PAGE_HEAD}]]>
		select
		<include refid="Base_Column_List" />
		from SYS_FUNCTION_INF
		<include refid="where" />
		order by ID desc
        <![CDATA[${PAGE_FOOT}]]>
	</select>
	
	<!-- count -->
	<select id="count" resultType="java.lang.Long" parameterType="com.my.ssm.sys.search.FunctionInfSearch">
		select count(*) FROM SYS_FUNCTION_INF
		<include refid="where" />
	</select>
	
	<!-- pageExt -->
	<select id="pageExt" resultMap="ExtBaseResultMap" parameterType="com.my.ssm.sys.search.FunctionInfSearch">
        <![CDATA[${PAGE_HEAD}]]>
		select
		<include refid="Base_Column_List" />
		from SYS_FUNCTION_INF
		<include refid="whereExt" />
		order by ID desc
        <![CDATA[${PAGE_FOOT}]]>
	</select>
	
	<!-- countExt -->
	<select id="countExt" resultType="java.lang.Long" parameterType="com.my.ssm.sys.search.FunctionInfSearch">
		select count(*) FROM SYS_FUNCTION_INF
		<include refid="whereExt" />
	</select>
	
	<!-- list -->
	<select id="list" resultMap="BaseResultMap" parameterType="com.my.ssm.sys.search.FunctionInfSearch">
		select
		<include refid="Base_Column_List" />
		from SYS_FUNCTION_INF
		<include refid="where" />
	</select>
	
	<!-- listExt -->
	<select id="listExt" resultMap="ExtBaseResultMap" parameterType="com.my.ssm.sys.search.FunctionInfSearch">
		select
		<include refid="Base_Column_List" />
		from SYS_FUNCTION_INF
		<include refid="whereExt" />
	</select>
	
	<!-- listExport -->
	<select id="listExport" resultMap="BaseResultMap" parameterType="com.my.ssm.sys.search.FunctionInfSearch">
		select
		<include refid="Base_Column_List" />
		from SYS_FUNCTION_INF 
		<include refid="where" />
	</select>
	
	<!-- listExportExt -->
	<select id="listExportExt" resultMap="ExtBaseResultMap" parameterType="com.my.ssm.sys.search.FunctionInfSearch">
		select
		<include refid="Base_Column_List" />
		from SYS_FUNCTION_INF 
		<include refid="whereExt" />
	</select>
    
    <!-- selectExtByPrimaryKey -->
    <select id="selectExtByPrimaryKey" resultMap="ExtBaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List" />
        from SYS_FUNCTION_INF
        where ID = #{id,jdbcType=BIGINT}
    </select>
    
	<!-- selectByBizKey -->
	<select id="selectByBizKey" resultMap="BaseResultMap" parameterType="com.my.ssm.sys.search.FunctionInfSearch">
		select
		<include refid="Base_Column_List" />
		from SYS_FUNCTION_INF
		<include refid="whereByBizKey" />
	</select>
	
	<!-- selectExtByBizKey -->
    <select id="selectExtByBizKey" resultMap="BaseResultMap" parameterType="com.my.ssm.sys.search.FunctionInfSearch">
        select
        <include refid="Base_Column_List" />
        from SYS_FUNCTION_INF
        <include refid="whereByBizKey" />
    </select>
    
	<!-- deleteByBizKey -->
	<delete id="deleteByBizKey" parameterType="com.my.ssm.sys.model.FunctionInf">
		delete from SYS_FUNCTION_INF
		<include refid="whereByBizKey" />
	</delete>
	
	<!-- bulkDelete -->
	<delete id="bulkDelete" parameterType="java.util.List" >
        delete from SYS_FUNCTION_INF
        <where>
	        <foreach collection="keyList" item="data" open="ID IN(" separator="," close=")">
	            ${data.id}
	        </foreach>
        </where>
    </delete>
	
	<!-- updateByBizKey -->
    <update id="updateByBizKey" parameterType="com.my.ssm.sys.model.FunctionInf">
    	update SYS_FUNCTION_INF
        <set>
      		<if test="corpId != null " >
        		CORP_ID = #{corpId,jdbcType=DECIMAL},
      		</if>
      		<if test="corp != null and corp != '' " >
        		CORP = #{corp,jdbcType=VARCHAR},
      		</if>
      		<if test="orgnId != null " >
        		ORGN_ID = #{orgnId,jdbcType=DECIMAL},
      		</if>
      		<if test="orgn != null and orgn != '' " >
        		ORGN = #{orgn,jdbcType=VARCHAR},
      		</if>
      		<if test="functionCode != null and functionCode != '' " >
        		FUNCTION_CODE = #{functionCode,jdbcType=VARCHAR},
      		</if>
      		<if test="functionName != null and functionName != '' " >
        		FUNCTION_NAME = #{functionName,jdbcType=VARCHAR},
      		</if>
      		<if test="functionUrl != null and functionUrl != '' " >
        		FUNCTION_URL = #{functionUrl,jdbcType=VARCHAR},
      		</if>
      		<if test="functionSort != null and functionSort != '' " >
        		FUNCTION_SORT = #{functionSort,jdbcType=VARCHAR},
      		</if>
      		<if test="functionIcon != null and functionIcon != '' " >
        		FUNCTION_ICON = #{functionIcon,jdbcType=VARCHAR},
      		</if>
      		<if test="menuId != null " >
        		MENU_ID = #{menuId,jdbcType=DECIMAL},
      		</if>
      		<if test="udf01 != null and udf01 != '' " >
        		UDF01 = #{udf01,jdbcType=VARCHAR},
      		</if>
      		<if test="udf02 != null and udf02 != '' " >
        		UDF02 = #{udf02,jdbcType=VARCHAR},
      		</if>
      		<if test="udf03 != null and udf03 != '' " >
        		UDF03 = #{udf03,jdbcType=VARCHAR},
      		</if>
      		<if test="udf04 != null and udf04 != '' " >
        		UDF04 = #{udf04,jdbcType=VARCHAR},
      		</if>
      		<if test="udf05 != null and udf05 != '' " >
        		UDF05 = #{udf05,jdbcType=VARCHAR},
      		</if>
      		<if test="rd != null and rd != '' " >
        		RD = #{rd,jdbcType=VARCHAR},
      		</if>
      		<if test="activeFlag != null and activeFlag != '' " >
        		ACTIVE_FLAG = #{activeFlag,jdbcType=VARCHAR},
      		</if>
      		<if test="remark != null and remark != '' " >
        		REMARK = #{remark,jdbcType=VARCHAR},
      		</if>
      		<if test="createdBy != null and createdBy != '' " >
        		CREATED_BY = #{createdBy,jdbcType=VARCHAR},
      		</if>
      		<if test="createdDate != null " >
        		CREATED_DATE = #{createdDate,jdbcType=TIMESTAMP},
      		</if>
      		<if test="modifiedBy != null and modifiedBy != '' " >
        		MODIFIED_BY = #{modifiedBy,jdbcType=VARCHAR},
      		</if>
      		<if test="modifiedDate != null " >
        		MODIFIED_DATE = #{modifiedDate,jdbcType=TIMESTAMP},
      		</if>
      		<if test="saasid != null and saasid != '' " >
        		SAASID = #{saasid,jdbcType=VARCHAR},
      		</if>
		</set>
		<include refid="whereByBizKey" />
    </update>
	
	<!-- where -->
	<sql id="where">
		<where>
      		<if test="orgnId != null" >
        		AND ORGN_ID = #{orgnId,jdbcType=BIGINT}
      		</if>
      		<if test="orgn != null and orgn != '' ">
        		AND ORGN = #{orgn,jdbcType=VARCHAR}
      		</if>
      		<if test="functionCode != null and functionCode != '' " >
        		AND FUNCTION_CODE = #{functionCode,jdbcType=VARCHAR}
      		</if>
      		<if test="menuId != null " >
        		AND MENU_ID = #{menuId,jdbcType=DECIMAL}
      		</if>
		</where>
	</sql>
	
	<!-- whereExt -->
	<sql id="whereExt">
		<where>
      		<if test="orgnId != null" >
        		AND ORGN_ID = #{orgnId,jdbcType=BIGINT}
      		</if>
      		<if test="orgn != null and orgn != '' ">
        		AND ORGN = #{orgn,jdbcType=VARCHAR}
      		</if>
      		<if test="functionCode != null and functionCode != '' " >
        		AND FUNCTION_CODE = #{functionCode,jdbcType=VARCHAR}
      		</if>
      		<if test="menuId != null " >
        		AND MENU_ID = #{menuId,jdbcType=DECIMAL}
      		</if>
		</where>
	</sql>
	
	<!-- whereByBizKey -->
	<sql id="whereByBizKey">
		<where>
      		<if test="orgnId != null" >
        		AND ORGN_ID = #{orgnId,jdbcType=BIGINT}
      		</if>
      		<if test="orgn != null and orgn != '' ">
        		AND ORGN = #{orgn,jdbcType=VARCHAR}
      		</if>
      		<if test="functionCode != null and functionCode != '' " >
        		AND FUNCTION_CODE = #{functionCode,jdbcType=VARCHAR}
      		</if>
      		<if test="menuId != null " >
        		AND MENU_ID = #{menuId,jdbcType=DECIMAL}
      		</if>
		</where>
	</sql>
	
</mapper>